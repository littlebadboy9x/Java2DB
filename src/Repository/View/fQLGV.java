/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Repository.View;

import Repository.Domain.GiangVien;
import Repository.Service.GiangVienService;
import Repository.Service.ISrGiangVien;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tran Viet Vuong
 */
public class fQLGV extends javax.swing.JFrame {

    private List<GiangVien> lists;
    private DefaultTableModel model = new DefaultTableModel();
    ISrGiangVien isr = new GiangVienService();
    GiangVienService sr = new GiangVienService();
    int index = 0;

    /**
     * Creates new form fQLGV
     */
    public fQLGV() {
        initComponents();
        model = (DefaultTableModel) tblList.getModel();
        lists = isr.getData();
        showDetail(index);
        showData(lists);
        showDataToForm(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        txtTuoi = new javax.swing.JTextField();
        cboBac = new javax.swing.JComboBox<>();
        cboLoai = new javax.swing.JComboBox<>();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSapXep = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnFulltime = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ GIẢNG VIÊN");

        btnClear.setText("Clear Form");

        jLabel2.setText("Mã GV");

        jLabel3.setText("Tên GV");

        jLabel4.setText("Tuổi");

        jLabel5.setText("Bậc");

        jLabel6.setText("Loại");

        jLabel7.setText("Giới Tính");

        cboBac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        cboLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fulltime", "Parttime" }));

        buttonGroup1.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã GV", "Tên GV", "Tuổi", "Bậc", "Giới Tính"
            }
        ));
        tblList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblList);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnUpdate.setText("Cập Nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSapXep.setText("Sắp Xếp");
        btnSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepActionPerformed(evt);
            }
        });

        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnFulltime.setText("GV FullTime");
        btnFulltime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFulltimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(349, 349, 349)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5))
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(cboBac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rdoNu)
                                                    .addComponent(rdoNam))))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(118, 118, 118)
                                .addComponent(btnFulltime, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                                .addComponent(btnSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnClear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnClear)
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboBac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addComponent(rdoNam)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(cboLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(rdoNu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnUpdate)
                    .addComponent(btnSapXep)
                    .addComponent(btnExit)
                    .addComponent(btnFulltime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepActionPerformed
        // TODO add your handling code here:
        isr.sortByName(lists);
        showData(lists);

    }//GEN-LAST:event_btnSapXepActionPerformed

    private void tblListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListMouseClicked
        // TODO add your handling code here:
        int rowIndex = tblList.getSelectedRow();
        showDataToForm(rowIndex);
        this.getListTable();
    }//GEN-LAST:event_tblListMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:                                 
        // Lấy chỉ số dòng được chọn
        int rowIndex = tblList.getSelectedRow();
        System.out.println("Row index selected: " + rowIndex);

        // Kiểm tra xem có dòng nào được chọn không
        if (rowIndex >= 0 && rowIndex < lists.size()) {
            String ma = lists.get(rowIndex).getMa(); // Lấy ID của giảng viên
            int choose = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa không?", "Notification", JOptionPane.YES_NO_OPTION);

            // Nếu người dùng chọn "Có"
            if (choose == JOptionPane.YES_OPTION) {
                isr.xoa(lists, ma); // Gọi phương thức xóa
                JOptionPane.showMessageDialog(this, "Xóa thành công");

                // Cập nhật danh sách và hiển thị lại dữ liệu
                lists = isr.getData();
                showData(lists);
            }
        } else {
            // Thông báo nếu không có dòng nào được chọn
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng muốn xóa");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        GiangVien gv = getDataToForm(); // Lấy dữ liệu từ form
        // Kiểm tra dữ liệu hợp lệ
        if (gv.getMa().isEmpty() || gv.getTen().isEmpty() || gv.getTuoi() <= 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin.");
            return;
        }
        String message = String.format("Bạn có chắc chắn muốn thêm giảng viên này không?\n"
                + "Mã: %s\nTên: %s\nLoại: %s\nTuổi: %d\nBậc: %d\nGiới tính: %s",
                gv.getMa(), gv.getTen(), gv.getLoai(), gv.getTuoi(), gv.getBac(), gv.getGioiTinhToString());

        int confirm = JOptionPane.showConfirmDialog(this, message, "Xác nhận thêm giảng viên", JOptionPane.YES_NO_OPTION);

        System.out.println("Mã: " + gv.getMa());
        System.out.println("Tên: " + gv.getTen());
        System.out.println("Loại: " + gv.getLoai());
        System.out.println("Tuổi: " + gv.getTuoi());
        System.out.println("Bậc: " + gv.getBac());
        System.out.println("Giới tính: " + gv.getGioiTinhToString());
        // Gọi phương thức thêm từ Service
        isr.them(lists, gv);

        // Kiểm tra xem giảng viên đã được thêm vào danh sách hay chưa
        if (lists.contains(gv)) {
            JOptionPane.showMessageDialog(this, "Thêm thành công");
            showData(lists); // Hiển thị lại danh sách giảng viên
        } else {
            JOptionPane.showMessageDialog(this, "Thêm thất bại. Vui lòng kiểm tra lại thông tin.");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnFulltimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFulltimeActionPerformed
        // TODO add your handling code here:
        List<GiangVien> allGiangViens = sr.getData(); // Lấy tất cả giảng viên từ cơ sở dữ liệu
        if (isShowingFullTime) {
            // Nếu đang hiển thị Fulltime, quay lại hiển thị tất cả giảng viên
            showData(allGiangViens);
            isShowingFullTime = false; // Cập nhật trạng thái
        } else {
            // Nếu không, chỉ hiển thị giảng viên Fulltime
            List<GiangVien> fullTimeGiangViens = filterFullTime(allGiangViens); // Lọc giảng viên Fulltime
            showData(fullTimeGiangViens);
            isShowingFullTime = true; // Cập nhật trạng thái
        }
    }//GEN-LAST:event_btnFulltimeActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        GiangVien gv = getDataToForm(); // Lấy dữ liệu từ form

        // Kiểm tra dữ liệu hợp lệ
        if (gv.getMa().isEmpty() || gv.getTen().isEmpty() || gv.getTuoi() <= 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin.");
            return;
        }

        // Hiển thị thông tin giảng viên để xác nhận
        String message = String.format("Bạn có chắc chắn muốn cập nhật giảng viên này không?\n"
                + "Mã: %s\nTên: %s\nLoại: %s\nTuổi: %d\nBậc: %d\nGiới tính: %s",
                gv.getMa(), gv.getTen(), gv.getLoai(), gv.getTuoi(), gv.getBac(), gv.getGioiTinhToString());

        int confirm = JOptionPane.showConfirmDialog(this, message, "Xác nhận cập nhật giảng viên", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            // Gọi phương thức cập nhật từ Service
            isr.update(lists, message, gv); // Gọi phương thức cập nhật

            // Hiển thị thông báo thành công
            JOptionPane.showMessageDialog(this, "Cập nhật thành công");
            showData(lists); // Hiển thị lại danh sách giảng viên
        } else {
            // Nếu người dùng chọn "No", không làm gì cả
            JOptionPane.showMessageDialog(this, "Thao tác cập nhật giảng viên đã bị hủy.");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fQLGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fQLGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fQLGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fQLGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fQLGV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFulltime;
    private javax.swing.JButton btnSapXep;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboBac;
    private javax.swing.JComboBox<String> cboLoai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblList;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables

    private void showData(List<GiangVien> lists) {
        model.setRowCount(0);
        for (GiangVien gv : lists) {
            model.addRow((Object[]) gv.toDataRow());
        }
    }

    private void showDetail(int index) {
        GiangVien gv = lists.get(index);
        txtMa.setText(gv.getMa());
        txtTen.setText(gv.getTen());
        cboLoai.setSelectedItem(gv.getLoai());
        txtTuoi.setText(String.valueOf(gv.getTuoi()));
        cboBac.setSelectedItem(gv.getBac());
        if (gv.getGioiTinh() == 1) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
    }

    private void getListTable() {
        int row = tblList.getSelectedRow();
        if (row >= 0) {
            index = row;
            showDetail(index);
        }
    }

    private GiangVien getDataToForm() {
        String ma = txtMa.getText();
        String ten = txtTen.getText();
        String loai;
        if (cboLoai.getSelectedItem().equals("Fulltime")) {
            loai = "Loai 1"; // Ánh xạ "Fulltime" về "Loại 1"
        } else if (cboLoai.getSelectedItem().equals("Parttime")) {
            loai = "Loai 2"; // Ánh xạ "Parttime" về "Loại 2"
        } else {
            loai = null; // Hoặc một giá trị mặc định nếu cần
        }
        int tuoi = Integer.parseInt(txtTuoi.getText());

        // Lấy giá trị từ cboBac và chuyển đổi sang Integer
        int bac = Integer.parseInt((String) cboBac.getSelectedItem()); // Chuyển đổi từ String sang Integer

        int gioiTinh = rdoNam.isSelected() ? 1 : 0;

        return new GiangVien(ma, ten, loai, tuoi, bac, gioiTinh);
    }

    private void showDataToForm(int rowIndex) {
        GiangVien gv = lists.get(rowIndex);
        txtMa.setText(gv.getMa());
        txtTen.setText(gv.getTen());
        cboLoai.setSelectedItem(gv.getLoai()); // Giả sử gv.getLoai() trả về "Loại 1" hoặc "Loại 2"
        txtTuoi.setText(String.valueOf(gv.getTuoi()));
        // Thiết lập bậc cho cboBac
        cboBac.setSelectedItem(gv.getBac()); // Giả sử gv.getBac() trả về int và cboBac chứa các giá trị int
        // Thiết lập giới tính
        if (gv.getGioiTinh() == 1) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        // Kiểm tra giá trị loai trước khi so sánh
        String loai = gv.getLoai();
        if (loai != null) { // Kiểm tra xem loai có phải là null không
            if (loai.equals("Loai 1")) {
                cboLoai.setSelectedItem("Fulltime");
            } else if (loai.equals("Loai 2")) {
                cboLoai.setSelectedItem("Parttime");
            }
        } else {
            // Xử lý trường hợp loai là null (có thể đặt giá trị mặc định hoặc thông báo)
            cboLoai.setSelectedItem(null); // Hoặc một giá trị mặc định nào đó
        }
    }

    private void initComboBox() {
        List<String> loaiGiangVien = sr.getLoaiGiangVien();
        for (String loai : loaiGiangVien) {
        }
    }

    private List<GiangVien> filterFullTime(List<GiangVien> allGiangViens) {
        List<GiangVien> fullTimeGiangViens = new ArrayList<>();
        for (GiangVien gv : allGiangViens) {
            if ("Loai 1".equals(gv.getLoai())) { // Kiểm tra loại giảng viên
                fullTimeGiangViens.add(gv);
            }
        }
        return fullTimeGiangViens;
    }
    private boolean isShowingFullTime = false;
}
